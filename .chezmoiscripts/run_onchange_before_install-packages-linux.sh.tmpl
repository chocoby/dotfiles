{{ if eq .chezmoi.os "linux" -}}
#!/bin/bash

set -ex

sudo apt update && \
sudo apt install -y \
    fzf \
    git \
    jq \
    ripgrep \
    tmux

# gh
sudo mkdir -p -m 755 /etc/apt/keyrings \
       && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
       && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
       && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
       && sudo mkdir -p -m 755 /etc/apt/sources.list.d \
       && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
       && sudo apt update \
       && sudo apt install gh -y

# ghq
TEMP_DIR=$(mktemp -d)
GHQ_URL="https://github.com/x-motemen/ghq/releases/latest/download/ghq_linux_amd64.zip"
curl -L -o "${TEMP_DIR}/ghq_linux_amd64.zip" "${GHQ_URL}"
unzip -d "${TEMP_DIR}" "${TEMP_DIR}/ghq_linux_amd64.zip"
mv "${TEMP_DIR}/ghq_linux_amd64/ghq" ~/.local/bin/
rm -rf "${TEMP_DIR}"

# mise
curl -sS https://mise.run | sh

# Neovim
rm -f ~/local/bin/nvim
rm -f ~/local/AppImage/nvim.appimage
rm -rf ~/local/AppImage/nvim

mkdir -p ~/local/AppImage
cd ~/local/AppImage
{{ if eq .chezmoi.arch "amd64" -}}
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.appimage
mv nvim-linux-x86_64.appimage nvim.appimage
{{ else if eq .chezmoi.arch "arm64" -}}
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-arm64.appimage
mv nvim-linux-arm64.appimage nvim.appimage
{{ end -}}
chmod u+x nvim.appimage
./nvim.appimage --appimage-extract
mv squashfs-root nvim
rm -f ~/.local/bin/nvim
ln -s ~/local/AppImage/nvim/usr/bin/nvim ~/.local/bin/nvim

# starship
curl -sS https://starship.rs/install.sh | sh -s -- -y -b ~/.local/bin

{{ end -}}
